import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';
import './App.css';
import Header from './Header';
import Description from './Desc';

const people = [
  {
    iin: "010101500123",
    name: "–ê—Å–∞–Ω–æ–≤ –ï—Ä–Ω–∞—Ä",
    dob: "01.01.2001",
    address: "–ê—Å—Ç–∞–Ω–∞ “õ.",
    photo: "https://static.tildacdn.com/tild6138-6632-4235-b466-613934343134/12.jpg",
    services: {
      family: {
        married: true,
        children: 2,
      },
      education: {
        level: "–ñ–æ“ì–∞—Ä—ã",
        institution: "“ö–∞–∑–∞“õ “∞–ª—Ç—Ç—ã“õ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ",
        program: "–ö–æ–º–ø—å—é—Ç–µ—Ä–ª—ñ–∫ “ì—ã–ª—ã–º–¥–∞—Ä",
      },
      job: {
        position: "–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞—à—ã",
        company: "Tech Ltd.",
      },
      health: {
        bloodType: "–û+",
        allergies: "–ñ–æ“õ",
      },
      finance: {
        income: 150000,
        taxPaid: 30000,
      },
      legal: {
        lawyer: "–ñ–∞–Ω–∞—Ä –ë.",
        caseStatus: "–®–µ—à—ñ–ª–º–µ–≥–µ–Ω",
      },
      socialSupport: {
        assistanceType: "–ñ”ô—Ä–¥–µ–º–∞“õ—ã",
        amount: 5000,
      },
      insurance: {
        policyNumber: "123456789",
        expiryDate: "01.01.2026",
      },
    },
  },
  {
    iin: "020202600456",
    name: "–ú“±—Ä–∞—Ç–æ–≤–∞ –ê–π–≥–µ—Ä—ñ–º",
    dob: "02.02.2002",
    address: "–ê–ª–º–∞—Ç—ã “õ.",
    photo: "https://static.tildacdn.com/tild6661-6236-4734-b439-313863366466/000001.jpg",
    services: {
      family: {
        married: false,
        children: 0,
      },
      education: {
        level: "–ö–æ–ª–ª–µ–¥–∂",
        institution: "–ê–ª–º–∞—Ç—ã –∫–æ–ª–ª–µ–¥–∂—ñ",
        program: "–î–∏–∑–∞–π–Ω",
      },
      job: {
        position: "–î–∏–∑–∞–π–Ω–µ—Ä",
        company: "Art Studio",
      },
      health: {
        bloodType: "–ê-",
        allergies: "–¢–æ–∑–∞“£“ì–∞ –∞–ª–ª–µ—Ä–≥–∏—è",
      },
      finance: {
        income: 80000,
        taxPaid: 15000,
      },
      legal: {
        lawyer: "–ù“±—Ä–ª–∞–Ω –¢.",
        caseStatus: "“ö–∞—Ä–∞–ª—É–¥–∞",
      },
      socialSupport: {
        assistanceType: "–ë–∞–ª–∞ –∫“Ø—Ç—ñ–º—ñ–Ω–µ –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã –∂”ô—Ä–¥–µ–º–∞“õ—ã",
        amount: 10000,
      },
      insurance: {
        policyNumber: "987654321",
        expiryDate: "10.10.2025",
      },
    },
  },
];

function App() {
  return (
    <Router>
      <div className="container">
        <Routes>
          <Route path="/" element={<HomePage />} />
          <Route path="/service/:type" element={<ServicePage />} />
        </Routes>
      </div>
    </Router>
  );
}

function HomePage() {
  return (
    <div>
      <Header></Header>
      <div className="cards">
        <ServiceCard icon="üë™" title="–°–µ–º—å—è" type="family" image="https://via.placeholder.com/150" />
        <ServiceCard icon="üìö" title="–ë—ñ–ª—ñ–º" type="education" image="https://via.placeholder.com/150" />
        <ServiceCard icon="üíº" title="–ñ“±–º—ã—Å" type="job" image="https://via.placeholder.com/150" />
        <ServiceCard icon="ü©∫" title="–î–µ–Ω—Å–∞—É–ª—ã“õ" type="health" image="https://via.placeholder.com/150" />
        <ServiceCard icon="üí∞" title="“ö–∞—Ä–∂—ã" type="finance" image="https://via.placeholder.com/150" />
        <ServiceCard icon="‚öñÔ∏è" title="“ö“±“õ—ã“õ" type="legal" image="https://via.placeholder.com/150" />
        <ServiceCard icon="ü§ù" title="”ò–ª–µ—É–º–µ—Ç—Ç—ñ–∫ –∫”©–º–µ–∫" type="socialSupport" image="https://via.placeholder.com/150" />
        <ServiceCard icon="üõ°Ô∏è" title="–°–∞“õ—Ç–∞–Ω–¥—ã—Ä—É" type="insurance" image="https://via.placeholder.com/150" />
      </div>
      <Description></Description>
    </div>
  );
}

function ServiceCard({ icon, title, type, image }) {
  return (
    <Link to={`/service/${type}`} className="card">
      <div className="card-image">
        <img src={image} alt={title} />
      </div>
      <div className="card-content">
        <span className="icon">{icon}</span>
        <h3>{title}</h3>
      </div>
    </Link>
  );
}

function ServicePage() {
  const { type } = useParams();
  const [iin, setIin] = useState("");
  const [person, setPerson] = useState(null);

  const handleSearch = () => {
    const found = people.find((p) => p.iin === iin);
    setPerson(found || null);
  };

  return (
    <div className="service-page">
      <h2>{type === 'family' ? '–°–µ–º—å—è “õ—ã–∑–º–µ—Ç—ñ' : 
            type === 'education' ? '–ë—ñ–ª—ñ–º “õ—ã–∑–º–µ—Ç—ñ' : 
            type === 'job' ? '–ñ“±–º—ã—Å “õ—ã–∑–º–µ—Ç—ñ' : 
            type === 'health' ? '–î–µ–Ω—Å–∞—É–ª—ã“õ “õ—ã–∑–º–µ—Ç—ñ' : 
            type === 'finance' ? '“ö–∞—Ä–∂—ã “õ—ã–∑–º–µ—Ç—ñ' : 
            type === 'legal' ? '“ö“±“õ—ã“õ “õ—ã–∑–º–µ—Ç—ñ' : 
            type === 'socialSupport' ? '”ò–ª–µ—É–º–µ—Ç—Ç—ñ–∫ –∫”©–º–µ–∫' : 
            type === 'insurance' ? '–°–∞“õ—Ç–∞–Ω–¥—ã—Ä—É' : '“ö—ã–∑–º–µ—Ç'}</h2>
      <input
        className="iin-input"
        value={iin}
        onChange={(e) => setIin(e.target.value)}
        placeholder="–ñ–°–ù –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑"
      />
      <button onClick={handleSearch}>–Ü–∑–¥–µ—É</button>

      {person && (
        <div className="person-info">
          <img src={person.photo} alt={person.name} className="person-photo" />
          <h3>{person.name}</h3>
          <p>–¢—É“ì–∞–Ω –∫“Ø–Ω—ñ: {person.dob}</p>
          <p>–ú–µ–∫–µ–Ω–∂–∞–π: {person.address}</p>
          
          {type === 'family' && (
            <div>
              <p>–û—Ç–±–∞—Å—ã–ª—ã“õ –∂–∞“ì–¥–∞–π: {person.services.family.married ? '“Æ–π–ª–µ–Ω–≥–µ–Ω' : '“Æ–π–ª–µ–Ω–±–µ–≥–µ–Ω'}</p>
              <p>–ë–∞–ª–∞–ª–∞—Ä —Å–∞–Ω—ã: {person.services.family.children}</p>
            </div>
          )}
          
          {type === 'education' && (
            <div>
              <p>–ë—ñ–ª—ñ–º –¥–µ“£–≥–µ–π—ñ: {person.services.education.level}</p>
              <p>–û“õ–∏—Ç—ã–Ω –æ“õ—É –æ—Ä–Ω—ã: {person.services.education.institution}</p>
              <p>–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞: {person.services.education.program}</p>
            </div>
          )}

          {type === 'job' && (
            <div>
              <p>“ö—ã–∑–º–µ—Ç—ñ: {person.services.job.position}</p>
              <p>–ö–æ–º–ø–∞–Ω–∏—è: {person.services.job.company}</p>
            </div>
          )}

          {type === 'health' && (
            <div>
              <p>“ö–∞–Ω —Ç–æ–±—ã: {person.services.health.bloodType}</p>
              <p>–ê–ª–ª–µ—Ä–≥–∏—è–ª–∞—Ä—ã: {person.services.health.allergies}</p>
            </div>
          )}

          {type === 'finance' && (
            <div>
              <p>–¢–∞–±—ã—Å: {person.services.finance.income} —Ç–≥</p>
              <p>–¢”©–ª–µ–Ω–≥–µ–Ω —Å–∞–ª—ã“õ: {person.services.finance.taxPaid} —Ç–≥</p>
            </div>
          )}

          {type === 'legal' && (
            <div>
              <p>–ê–¥–≤–æ–∫–∞—Ç: {person.services.legal.lawyer}</p>
              <p>–Ü—Å –∂–∞“ì–¥–∞–π—ã: {person.services.legal.caseStatus}</p>
            </div>
          )}

          {type === 'socialSupport' && (
            <div>
              <p>–ö”©–º–µ–∫ —Ç“Ø—Ä—ñ: {person.services.socialSupport.assistanceType}</p>
              <p>–°–æ–º–∞—Å—ã: {person.services.socialSupport.amount} —Ç–≥</p>
            </div>
          )}

          {type === 'insurance' && (
            <div>
              <p>–ü–æ–ª–∏—Å –Ω”©–º—ñ—Ä—ñ: {person.services.insurance.policyNumber}</p>
              <p>–ú–µ—Ä–∑—ñ–º—ñ: {person.services.insurance.expiryDate}</p>
            </div>
          )}
        </div>
      )}
    </div>
  );
}

export default App;
